# airflow/docker-compose-airflow.yml

x-airflow-common: &airflow-common
  build:
    context: ..
    dockerfile: airflow/Dockerfile
  image: ${DOCKER_HUB_USER:-chris}/airflow:latest

  # 將 .env 注入容器（你的 Admin 帳密/FERNET_KEY 可放這裡）
  env_file:
    - ../.env

  environment:
    # Airflow 基本設定
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Taipei

    # 資料庫連線（對應下方 postgres 服務名）
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow

    # 建議設定（可放在 .env）：若未設定，Airflow 仍可工作，但連線等敏感值不會加密
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY:-}

    # Webserver 綁定
    AIRFLOW__WEBSERVER__WEB_SERVER_HOST: 0.0.0.0

  volumes:
    # Airflow 設定與目錄
    - ./airflow.cfg:/opt/airflow/airflow.cfg
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./logs:/opt/airflow/logs

    # 專案程式掛進去，DAG 可直接 import 使用
    - ../data_ingestion:/opt/airflow/data_ingestion
    - ../output:/opt/airflow/output

    # 提供 DAG 讀取環境變數與金鑰
    - ../.env:/opt/airflow/.env
    - ../key.json:/opt/airflow/key.json

    # 如需在 DAG 內呼叫 docker
    - /var/run/docker.sock:/var/run/docker.sock

  networks:
    - my_network

services:
  postgres:
    image: postgres:13
    container_name: airflow-database
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - my_network

  airflow-init:
    <<: *airflow-common
    container_name: airflow-airflow-init
    command:
      - bash
      - -lc
      - |
        # 建議用 migrate（兼具 init 功能）
        airflow db migrate

        # 如已存在相同使用者則略過，避免重複執行報錯
        if ! airflow users list | awk '{print $1}' | grep -qx "${AIRFLOW_ADMIN_USER:-admin}"; then
          airflow users create \
            --username "${AIRFLOW_ADMIN_USER:-admin}" \
            --password "${AIRFLOW_ADMIN_PASS:-admin}" \
            --firstname Apache \
            --lastname Airflow \
            --role Admin \
            --email admin@example.com
        else
          echo "User ${AIRFLOW_ADMIN_USER:-admin} already exists; skip create."
        fi
    depends_on:
      - postgres

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command:
      - bash
      - -lc
      - exec airflow webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL","curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command:
      - bash
      - -lc
      - exec airflow scheduler
    depends_on:
      - airflow-init

volumes:
  postgres-db-volume:

networks:
  my_network:
    external: true  # 需先以 `docker network create my_network` 建立
